{"version":3,"sources":["components/AddPersonaje.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddPersonaje","setPersonajes","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","personaje","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","state","loading","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GitExpertApp","personajes","ReactDOM","render","document","getElementById"],"mappings":"0NAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,8BACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,eA4BhCZ,EAAae,UAAY,CACrBd,cAAee,IAAUC,KAAKC,Y,4BCrCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EF,EAD7E,sBAEAG,MAAMD,GAFN,cAEbE,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAaZK,GAbY,4CAAH,sDCGPO,G,KAAc,SAAC,GAAa,IAAXL,EAAU,EAAVA,IAC1B,OACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKP,EAAIP,IAAKe,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,aCFPO,EAAU,SAAC,GAAmB,IAAjBlB,EAAgB,EAAhBA,UAEhBmB,ECJkB,SAAEnB,GAC1B,MAA0BlB,mBAAS,CAC/BwB,KAAK,GACLc,SAAS,IAFb,mBAAOD,EAAP,KAAcE,EAAd,KAmBA,OAdAC,qBAAW,WACPvB,EAASC,GAAYuB,MAAK,SAAAC,GAEtBC,YAAY,WACRC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNJ,SAAS,MAEd,UAIR,CAACpB,IACGmB,EDhBOS,CAAc5B,GAE5B,OACI,qCACI,6BAAKA,IACL,qBAAKe,UAAU,YAAf,SACSI,EAAMb,KAAKE,KAAI,SAAAC,GAAG,OACf,cAAC,EAAD,CAEIA,IAAKA,GADAA,EAAIC,aEXxBmB,EAAe,WAIxB,MAAoC/C,mBAAS,CAAC,gBAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAQA,OACI,gCACI,8CAEA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,uBAEA,6BAEQiD,EAAWtB,KAAI,SAAAR,GAAS,OACpB,cAAC,EAAD,CAEIA,UAAYA,GADLA,Y,MCtBnC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee45f8f5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddPersonaje = ({setPersonajes}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue( e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        // console.log(\"Se ha subido\")\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setPersonajes(cats => [ inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nAddPersonaje.prototype = {\r\n    setPersonajes: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( personaje ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=49XfZFq91ZiRRcc14BCGAJuVw337fDbB&q=${ personaje }&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ( {img} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ personaje }) => {\r\n\r\n    const state = useFetchGifs( personaje );\r\n\r\n    return (\r\n        <>\r\n            <h3>{personaje}</h3>\r\n            <div className='card-gird'>\r\n                    {state.data.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id} \r\n                            img={img}/>\r\n                        ))}\r\n                </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( personaje ) =>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs( personaje ).then(imgs => {\r\n\r\n            setTimeout( () => {\r\n                console.log(imgs)\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 3000)\r\n\r\n            \r\n        })\r\n    }, [personaje])\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddPersonaje } from './components/AddPersonaje'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    // const categorias = ['Mario', 'Luigi', 'Sorbito'];\r\n\r\n    const [personajes, setPersonajes] = useState(['Mario Bross'])\r\n    \r\n    // // Renderizar cuando se añada un nuevo personaje\r\n    // const handleAdd = () => {\r\n    //     // Sabe que el estado cambio y hace una renderización\r\n    //     setPersonajes([...personajes, 'Princesa'])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n\r\n            <AddPersonaje setPersonajes={setPersonajes}/>\r\n\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    personajes.map(personaje => \r\n                        <GifGrid\r\n                            key = {personaje} \r\n                            personaje= {personaje}/>)\r\n                }\r\n            </ol>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}